<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>hr.tstrelar</groupId>
    <artifactId>swarm-app</artifactId>
    <name>Thorntail Example</name>
    <version>1.0.73-SNAPSHOT</version>
    <packaging>war</packaging>

    <!-- Deploy with, for example: >mvn release:update-versions clean package docker:build docker:start -Ddocker.follow -Dswarm.logging=DEBUG  -->
    <!-- Version will be reflected in the resulting image -->
    <!-- docker.follow will force maven to run until the server is shutdown -->
    <!-- swarm.logging - set desired jboss logging level -->

    <properties>
        <version.thorntail>2.2.0.Final</version.thorntail>
        <version.thorntail.fraction-plugin>90</version.thorntail.fraction-plugin>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <failOnMissingWebXml>false</failOnMissingWebXml>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <docker.maven.plugin.version>0.27.1</docker.maven.plugin.version>
        <docker.from>screaminbug/demo-app:1.0.57-SNAPSHOT</docker.from>
        <docker.assemblyDescriptorRef>artifact</docker.assemblyDescriptorRef>
        <docker.image.app>screaminbug/hello-app:${project.version}</docker.image.app>
        <docker.base.dir>/opt/swarm/</docker.base.dir>
        <docker.host.address>127.0.0.1</docker.host.address>
        <swarm.port>8080</swarm.port>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.thorntail</groupId>
                <artifactId>bom</artifactId>
                <version>${version.thorntail}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>io.thorntail.servers</groupId>
            <artifactId>microprofile</artifactId>
            <version>${version.thorntail}</version>
        </dependency>
        <dependency>
            <groupId>io.thorntail</groupId>
            <artifactId>logging</artifactId>
            <version>${version.thorntail}</version>
        </dependency>

    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>io.thorntail</groupId>
                <artifactId>thorntail-maven-plugin</artifactId>
                <version>${version.thorntail}</version>
                <configuration>
                    <properties>
                        <swarm.bind.address>0.0.0.0</swarm.bind.address>
                        <java.net.preferIPv4Stack>true</java.net.preferIPv4Stack>
                    </properties>
                    <!--<jvmArguments>-->
                        <!--<jvmArgument>-Dlog4j.configuration=resources/log4j.xml</jvmArgument>-->
                        <!--<jvmArgument>-Dorg.apache.logging.log4j.simplelog.StatusLogger.level=TRACE</jvmArgument>-->
                    <!--</jvmArguments>-->
                </configuration>
                <executions>
                    <execution>
                        <id>package</id>
                        <goals>
                            <goal>package</goal>
                        </goals>
                        <configuration>
                            <hollow>true</hollow>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.thorntail</groupId>
                <artifactId>thorntail-fraction-plugin</artifactId>
                <version>${version.thorntail.fraction-plugin}</version>
                <executions>
                    <execution>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>process</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.maven.plugin.version}</version>
                <configuration>
                    <images>
                        <image>
                            <alias>demoswarm</alias>
                            <name>${docker.image.app}</name>
                            <build>
                                <from>${docker.from}</from>
                                <maintainer>tstrelar@gmail.com</maintainer>
                                <ports>
                                    <port>8080</port>
                                </ports>
                                <entryPoint>
                                        <!--https://developers.redhat.com/blog/2017/03/14/java-inside-docker/-->
                                        <!-- https://github.com/fabric8io-images/java/blob/master/images/jboss/openjdk8/jdk/run-java.sh#L162-L175  -->
                                        <arg>/deployments/run-java.sh</arg>
                                        <!-- thin application -->
                                        <arg>${docker.base.dir}${project.artifactId}-${project.version}.war</arg>
                                        <arg>-s</arg>
                                        <arg>${docker.base.dir}project-defaults.yml</arg>
                                </entryPoint>
                                <assembly>
                                    <inline>
                                        <dependencySets>
                                            <dependencySet>
                                                <useProjectAttachments>true</useProjectAttachments>
                                                <includes>
                                                    <include>${project.groupId}:${project.artifactId}:war</include>
                                                </includes>
                                            </dependencySet>
                                        </dependencySets>
                                        <files>
                                            <file>
                                                <source>src/main/docker/configuration/project-defaults.yml</source>
                                            </file>
                                        </files>
                                    </inline>

                                    <user>jboss:jboss:jboss</user>
                                    <basedir>${docker.base.dir}</basedir>
                                </assembly>

                            </build>
                            <run>
                                <env>
                                    <!-- https://developers.redhat.com/blog/2017/03/14/java-inside-docker/ -->
                                    <!--<JAVA_APP_JAR>${docker.base.dir}${project.artifactId}-${project.version}-hollow-thorntail.jar</JAVA_APP_JAR>-->
                                    <JAVA_APP_JAR>/opt/swarm/swarm-app-1.0.57-SNAPSHOT-hollow-thorntail.jar</JAVA_APP_JAR>
                                    <AB_OFF>true</AB_OFF>
                                </env>
                                <ports>
                                    <!-- Map container port 8080 to a dynamical port -->
                                    <port>swarm.port:8080</port>
                                </ports>
                                <network>
                                    <name>test-network</name>
                                </network>
                                <wait>
                                    <http>
                                        <url>http://${docker.host.address}:${swarm.port}/hello</url>
                                        <!-- Change this to 200 when the URL above hits an endpoint -->
                                        <status>200</status>
                                    </http>
                                    <time>30000</time>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
